cmake_minimum_required(VERSION 3.8)
project(pronto_ros2_node)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(pronto_ros REQUIRED)
find_package(pronto_quadruped_ros REQUIRED)
find_package(pronto_quadruped_commons REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(pinocchio REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(pi3hat_moteus_int_msgs REQUIRED)


add_executable(pronto_node src/pronto_ros2_node.cpp)

ament_target_dependencies(
  pronto_node
  rclcpp
  pronto_ros
  pronto_quadruped_ros
  pronto_quadruped_commons
  sensor_msgs
  pinocchio
  nav_msgs
  pi3hat_moteus_int_msgs
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

install(TARGETS
pronto_node
  DESTINATION lib/${PROJECT_NAME})


install(
  DIRECTORY config launch  urdf 
  DESTINATION share/${PROJECT_NAME}
)

ament_package()
